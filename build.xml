<project name="appscansaasdeployplugin" default="bluemix" basedir=".">
	<resources id="release.jar.files">
		<string value="**/commons-beanutils-1.9.2.jar" />
		<string value="**/commons-collections-3.2.1.jar" />
		<string value="**/commons-fileupload-1.3.1.jar" />
		<string value="**/commons-logging-1.1.3.jar" />
		<string value="**/groovy-json-2.1.7.jar" />
		<string value="**/http-builder-0.7.2.jar" />
		<string value="**/httpclient-4.3.5.jar" />
		<string value="**/httpclient-cache-4.3.5.jar" />
		<string value="**/httpcore-4.3.2.jar" />
		<string value="**/httpmime-4.3.5.jar" />
		<string value="**/json-lib-2.4-jdk15.jar" />
		<string value="**/resolver.jar" />
	</resources>

	<resources id="base.release.src.files">
		<string value="**/AirPluginTool.groovy" />
		<string value="**/RestClient.groovy" />
		<string value="**/ScanType.groovy" />
		<string value="**/Environment.groovy" />
	</resources>

	<resources id="bluemix.release.src.files">
		<resources refid="base.release.src.files" />
		<string value="**/BluemixRestClient.groovy" />
		<string value="**/DastScanRunner.groovy" />
		<string value="**/MAScanRunner.groovy" />
		<string value="bluemix/**" />
	</resources>

	<resources id="scx.release.src.files">
		<resources refid="base.release.src.files" />
		<string value="**/SCXRestClient.groovy" />
		<string value="**/MAScanRunner.groovy" />
		<string value="scx/**" />
	</resources>

	<target name="bluemix">
		<property name="build.type" value="bluemix" />

		<pathconvert property="lib.includes" refid="release.jar.files" pathsep=" " />
		<pathconvert property="src.includes" refid="bluemix.release.src.files" pathsep=" " />
		<antcall target="main" />
	</target>

	<target name="scx">
		<property name="build.type" value="scx" />

		<pathconvert property="lib.includes" refid="release.jar.files" pathsep=" " />
		<pathconvert property="src.includes" refid="scx.release.src.files" pathsep=" " />
		<antcall target="main" />
	</target>

	<target name="main" depends="init, clean, copyDependencies, buildZip">
	</target>

	<!-- Copy in the dependencies -->
	<target name="copyDependencies">
		<!-- inputs (info, upgrade) -->
		<copy todir="${build.dir}" description="Copying source files">
			<fileset dir="${plugin.dir}">
				<include name="info.xml" />
				<include name="upgrade.xml" />
				<include name="plugin.xml" />
			</fileset>

			<fileset dir="${src.dir}" includes="${src.includes}" />
		</copy>
		
		<!-- move runnable scripts from sub directory to main dir -->
		<copy todir="${build.dir}" description="Copying source files">
			<fileset dir="${build.dir}/${build.type}" />
		</copy>
		<delete dir="${build.dir}/${build.type}" />

		<mkdir dir="${build.dir}/license" />
		<!-- copy license -->
		<copy todir="${build.dir}/license" description="Copying license">
			<fileset dir="${license.dir}">
				<include name="EPL.txt" />
			</fileset>
		</copy>

		<mkdir dir="${build.dir}/lib" />
		<!-- copy lib -->
		<copy todir="${build.dir}/lib" description="Copying libs">
			<fileset dir="${lib.dir}" includes="${lib.includes}" />
		</copy>

		<mkdir dir="${build.dir}/doc" />
		<!-- copy doc -->
		<copy todir="${build.dir}/doc" description="Copying doc dir">
			<fileset dir="${doc.dir}">
				<include name="HowTo.html" />
			</fileset>
		</copy>
	</target>

	<!-- Build the actual zip file that gets uploaded to UrbanCode -->
	<target name="buildZip">
		<zip destfile="${deployPluginArchiveName}" basedir="${build.dir}" update="false" />
	</target>

	<!-- Clean up the build directory -->
	<target name="clean">
		<delete dir="build" />
		<mkdir dir="build" />
		<delete file="${deployPluginArchiveName}" />
	</target>

	<target name="init">
		<property name="src.dir" value="${basedir}/src" />
		<property name="build.dir" value="${basedir}/build" />
		<property name="plugin.dir" value="${basedir}/plugin/${build.type}" />
		<property name="license.dir" value="${basedir}/license" />
		<property name="doc.dir" value="${basedir}/doc" />
		<property name="lib.dir" value="${basedir}/lib" />
		<property name="res.dir" value="${basedir}/res" />
		<property name="deployPluginArchiveName" value="releases/AppScanSaaSPlugin.${build.type}.zip" />
	</target>
</project>

